{"ast":null,"code":"var _jsxFileName = \"/Users/gabriel/Desktop/healthyonthehill/src/components/AnimatedText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AnimatedText.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedText = () => {\n  _s();\n  const words = ['gym', 'meal', 'friend']; // Array of words to cycle through\n  const [index, setIndex] = useState(0); // State to track the current index\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIndex(prevIndex => (prevIndex + 1) % words.length); // Cycle through words\n    }, 3000); // Change word every 2 seconds\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [words.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animated-text\",\n    children: [\"Find your favorite \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"word\",\n      children: words[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(AnimatedText, \"c3fuAdVwNN91t4bNS1qBXl5hAWY=\");\n_c = AnimatedText;\nexport default AnimatedText;\nvar _c;\n$RefreshReg$(_c, \"AnimatedText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnimatedText","_s","words","index","setIndex","interval","setInterval","prevIndex","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gabriel/Desktop/healthyonthehill/src/components/AnimatedText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AnimatedText.css'; // Import CSS for styling\n\nconst AnimatedText = () => {\n    const words = ['gym', 'meal', 'friend']; // Array of words to cycle through\n    const [index, setIndex] = useState(0); // State to track the current index\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setIndex((prevIndex) => (prevIndex + 1) % words.length); // Cycle through words\n        }, 3000); // Change word every 2 seconds\n\n        return () => clearInterval(interval); // Cleanup interval on unmount\n    }, [words.length]);\n\n    return (\n        <div className=\"animated-text\">\n            Find your favorite <span className=\"word\">{words[index]}</span>\n        </div>\n    );\n};\n\nexport default AnimatedText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BF,QAAQ,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIL,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACH,KAAK,CAACM,MAAM,CAAC,CAAC;EAElB,oBACIT,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,GAAC,qBACR,eAAAZ,OAAA;MAAMW,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAET,KAAK,CAACC,KAAK;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd,CAAC;AAACd,EAAA,CAjBID,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
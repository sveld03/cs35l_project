{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sveld\\\\Downloads\\\\Code\\\\CS_35L\\\\cs35l_project\\\\healthyonthehill\\\\src\\\\components\\\\AnimatedText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordList = ['Meal', 'Exercise', 'Bruin Buddy', 'Meal'];\nconst AnimatedText = () => {\n  _s();\n  const [currWord, setCurrWord] = useState(wordList[0]);\n  const index = useRef(0);\n  useEffect(() => {\n    let interval = null;\n    if (true) {\n      interval = setInterval(() => {\n        index.current++;\n        setCurrWord(wordList[index.current]);\n        if (index.current === wordList.length - 1) {\n          index.current = 0;\n        }\n      }, 1200);\n    }\n    return () => clearInterval(interval);\n  });\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    children: [\"Find your favorite  \", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: currWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(AnimatedText, \"5blb6QoX4fYNfiZe5geIUhMwaEA=\");\n_c = AnimatedText;\nexport default AnimatedText;\nvar _c;\n$RefreshReg$(_c, \"AnimatedText\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Typography","jsxDEV","_jsxDEV","wordList","AnimatedText","_s","currWord","setCurrWord","index","interval","setInterval","current","length","clearInterval","variant","gutterBottom","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sveld/Downloads/Code/CS_35L/cs35l_project/healthyonthehill/src/components/AnimatedText.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst wordList = ['Meal', 'Exercise', 'Bruin Buddy', 'Meal'];\r\n\r\nconst AnimatedText = () => {\r\n    const [currWord, setCurrWord] = useState(wordList[0]);\r\n\r\n    const index = useRef(0);\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (true) {\r\n            interval = setInterval(() => {\r\n                index.current++;\r\n                setCurrWord(wordList[index.current]);\r\n                if (index.current === wordList.length - 1) {\r\n                    index.current = 0;\r\n                }\r\n            }, 1200);\r\n        }\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    return (\r\n        <Typography variant=\"h5\" gutterBottom >\r\n            Find your favorite  <span style={{ color: 'red' }}>{currWord}</span>\r\n        </Typography>\r\n\r\n    );\r\n};\r\n\r\nexport default AnimatedText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,CAAC;AAE5D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;EAErD,MAAMK,KAAK,GAAGT,MAAM,CAAC,CAAC,CAAC;EACvBD,SAAS,CAAC,MAAM;IACZ,IAAIW,QAAQ,GAAG,IAAI;IACnB,IAAI,IAAI,EAAE;MACNA,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACzBF,KAAK,CAACG,OAAO,EAAE;QACfJ,WAAW,CAACJ,QAAQ,CAACK,KAAK,CAACG,OAAO,CAAC,CAAC;QACpC,IAAIH,KAAK,CAACG,OAAO,KAAKR,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;UACvCJ,KAAK,CAACG,OAAO,GAAG,CAAC;QACrB;MACJ,CAAC,EAAE,IAAI,CAAC;IACZ;IACA,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC;EACxC,CAAC,CAAC;EAEF,oBACIP,OAAA,CAACF,UAAU;IAACc,OAAO,EAAC,IAAI;IAACC,YAAY;IAAAC,QAAA,GAAE,sBACf,eAAAd,OAAA;MAAMe,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEV;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAGrB,CAAC;AAACjB,EAAA,CAxBID,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}